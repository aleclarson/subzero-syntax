@import './styles/syntax-variables.less';
@import './styles/editor.less';
@import './styles/languages.less';

status-bar {
  color: tint(@keyword-color, 25%);

  a, a.icon,
  .grammar-status a,
  .encoding-status a,
  .cursor-position a {
    color: inherit;
  }

  .package-updates-status-view {
    color: darken(@func-color, 10%);
  }
}

atom-text-editor {

  .highlight .region,
  .find-result .region {
    background: tint(lighten(@bkg, 5%), 8%);
    border-color: tint(lighten(@bkg, 25%), 8%);
    border-radius: 2px;
    padding-right: 8px !important;
  }

  .current-result .region {
    background: tint(lighten(@bkg, 5%), 15%);
    border-color: tint(lighten(@bkg, 25%), 35%);
  }

  .highlight .region.highlight-selected {
    @color: spin(@bkg, -35);
    background: lighten(@color, 8%);
    border-color: lighten(@color, 36%);
  }

  .syntax--less,
  .syntax--sass,
  .syntax--scss {

    .syntax--entity.syntax--tag,
    .syntax--entity.syntax--class,
    .syntax--constant.syntax--support,
    .syntax--property-list .syntax--entity {
      color: darken(shade(#93DFF5, 14%), 16%);
    }

    .syntax--rgb-value {
      color: @func-color;
    }

    .syntax--percentage {
      color: shade(@const-color, 25%);
    }

    .syntax--brace,
    .syntax--punctuation {
      color: darken(@keyword-color, 5%);
    }

    .syntax--property-name {
      color: #17F0D6;
    }

    .syntax--variable {
      color: @var-color;
    }
  }

  .syntax--js {

    .syntax--quasi .syntax--punctuation {
      color: @string-color;
    }

    // Object key inner <span>
    .syntax--string.syntax--unquoted {
      color: unset;
    }

    // Variable assignment
    .syntax--object.syntax--key,
    .syntax--variable.syntax--dollar,
    .syntax--variable.syntax--readwrite,
    .syntax--parameters > .syntax--variable,
    .syntax--meta.syntax--function > .syntax--name {
      color: @var-color;
    }

    // Function calls
    .syntax--method-call > .syntax--function,
    .syntax--function-call > .syntax--function {
      color: @func-color;
    }
  }

  .syntax--coffee {
    .syntax--class.syntax--name {
      color: @var-color;
    }
    .syntax--type.syntax--instance,
    .syntax--function-call > .syntax--instance {
      color: @func-color;
    }
    .syntax--object.syntax--destructured > .syntax--variable {
      color: @var-color;
    }
  }
}
